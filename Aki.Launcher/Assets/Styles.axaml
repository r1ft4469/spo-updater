<Styles xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:cc="using:Aki.Launcher.CustomControls"
        xmlns:rxui="using:Avalonia.ReactiveUI"
        >
	<Design.PreviewWith>
		<Border Padding="20" Background="DimGray">
			<!-- Add Controls for Previewer Here -->
			<Button Classes="link" Content="Link me daddy"/>
		</Border>
	</Design.PreviewWith>

	<!-- Add Styles Here -->

	<!-- Notification Manager Styles -->
	<Style Selector="WindowNotificationManager">
		<Setter Property="Margin" Value="0 35 0 0"/>
		<Setter Property="VerticalAlignment" Value="Top"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="MaxItems" Value="2"/>
	</Style>

	<!-- NotificationCard Styles -->
	<Style Selector="NotificationCard">
		<Setter Property="Template">
			<ControlTemplate>
				<LayoutTransformControl Name="PART_LayoutTransformControl" UseRenderTransform="True">
					<Border CornerRadius="{DynamicResource ControlCornerRadius}" BoxShadow="0 6 8 0 #4F000000" Margin="5 5 5 10">
						<Border Background="{TemplateBinding Background}"
											BorderBrush="{TemplateBinding BorderBrush}"
											BorderThickness="{TemplateBinding BorderThickness}"
											CornerRadius="{DynamicResource ControlCornerRadius}" ClipToBounds="True">
							<DockPanel>
								<ContentControl Name="PART_Content" Content="{TemplateBinding Content}" />
							</DockPanel>
						</Border>
					</Border>
				</LayoutTransformControl>
			</ControlTemplate>
		</Setter>

		<Style.Animations>
			<Animation Duration="0:0:0.45" Easing="SineEaseIn" FillMode="Forward">
				<KeyFrame Cue="0%">
					<Setter Property="Opacity" Value="0"/>
					<Setter Property="ZIndex" Value="0"/>
					<Setter Property="TranslateTransform.Y" Value="-100"/>
					<Setter Property="ScaleTransform.ScaleX" Value="1"/>
					<Setter Property="ScaleTransform.ScaleY" Value="1"/>
				</KeyFrame>
				<KeyFrame Cue="30%">
					<Setter Property="Opacity" Value="0"/>
				</KeyFrame>
				<KeyFrame Cue="99%">
					<Setter Property="ZIndex" Value="0"/>
				</KeyFrame>
				<KeyFrame Cue="100%">
					<Setter Property="Opacity" Value="1"/>
					<Setter Property="ZIndex" Value="1"/>
					<Setter Property="TranslateTransform.Y" Value="0"/>
					<Setter Property="ScaleTransform.ScaleX" Value="1"/>
					<Setter Property="ScaleTransform.ScaleY" Value="1"/>
				</KeyFrame>
			</Animation>
		</Style.Animations>
	</Style>

	<Style Selector="NotificationCard[IsClosing=true] /template/ LayoutTransformControl#PART_LayoutTransformControl">
		<Style.Animations>
			<Animation Duration="0:0:0.3" Easing="SineEaseOut" FillMode="Backward">
				<KeyFrame Cue="0%">
					<Setter Property="Opacity" Value="1"/>
					<Setter Property="TranslateTransform.X" Value="0"/>
					<Setter Property="TranslateTransform.Y" Value="0"/>
				</KeyFrame>
				<KeyFrame Cue="100%">
					<Setter Property="Opacity" Value="0"/>
					<Setter Property="TranslateTransform.X" Value="0"/>
					<Setter Property="TranslateTransform.Y" Value="-100"/>
				</KeyFrame>
			</Animation>
		</Style.Animations>
	</Style>

	<!-- TitleBar Styles -->
	<Style Selector="cc|TitleBar">
		<Setter Property="Background" Value="{StaticResource AKI_Background_Dark}"/>
		<Setter Property="Foreground" Value="{StaticResource AKI_Foreground_Light}"/>
		<Setter Property="ButtonForeground" Value="{StaticResource AKI_Brush_DarkGrayBlue}"/>
	</Style>

	<Style Selector="cc|TitleBar.versiontag">
		<Setter Property="BorderBrush" Value="{StaticResource AKI_Brush_Yellow}"/>
		<Setter Property="BorderThickness" Value="0 0 0 2"/>
	</Style>
		   
	<!-- TextBox Styles -->
	<!-- SourceRef: https://github.com/AvaloniaUI/Avalonia/blob/master/src/Avalonia.Themes.Fluent/Controls/TextBox.xaml -->
	<Style Selector="TextBox">
		<Setter Property="Background" Value="{StaticResource AKI_Background_Light}"/>
		<Setter Property="FontWeight" Value="SemiBold"/>
	</Style>

	<Style Selector="TextBox:focus">
		<Setter Property="Foreground" Value="{StaticResource AKI_Brush_Lighter}"/>
	</Style>

	<Style Selector="TextBox:pointerover">
		<Setter Property="Foreground" Value="{StaticResource AKI_Brush_Lighter}"/>
	</Style>

	<Style Selector="TextBox:pointerover /template/ Border#PART_BorderElement">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="DimGray"/>
	</Style>

	<Style Selector="TextBox:pointerover /template/ TextBlock#PART_Watermark, TextBox:focus /template/ TextBlock#PART_FloatingWatermark">
		<Setter Property="Foreground" Value="DimGray"/>
	</Style>

	<Style Selector="TextBox:focus /template/ TextBlock#PART_Watermark, TextBox:focus /template/ TextBlock#PART_FloatingWatermark">
		<Setter Property="Foreground" Value="DimGray"/>
	</Style>

	<Style Selector="TextBox:focus /template/ Border#PART_BorderElement">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="{StaticResource AKI_Brush_Yellow}"/>
		<Setter Property="BorderThickness" Value="1"/>
	</Style>

	<!-- Label Styles -->
	<!-- SourceRef: https://github.com/AvaloniaUI/Avalonia/blob/master/src/Avalonia.Themes.Fluent/Controls/Label.xaml -->
	<Style Selector="Label">
		<Setter Property="Foreground" Value="{StaticResource AKI_Foreground_Light}"/>
	</Style>

	<Style Selector="Label.yellow">
		<Setter Property="Foreground" Value="{StaticResource AKI_Brush_Yellow}"/>
	</Style>

	<Style Selector="Label.dark">
		<Setter Property="Foreground" Value="DimGray"/>
	</Style>

	<Style Selector="Label.versionMismatch">
		<Setter Property="Foreground" Value="OrangeRed"/>
	</Style>

	<!-- ProgressBar Styles -->
	<!-- SourceRef: https://github.com/AvaloniaUI/Avalonia/blob/master/src/Avalonia.Themes.Fluent/Controls/ProgressBar.xaml -->
	<Style Selector="ProgressBar">
		<Setter Property="Foreground" Value="{StaticResource AKI_Brush_Yellow}"/>
		<Setter Property="Background" Value="{StaticResource AKI_Brush_DarkGrayBlue}"/>
	</Style>

	<Style Selector="ProgressBar.error">
		<Setter Property="Foreground" Value="Red"/>
		<Style.Animations>
			<Animation Duration="0:0:0.5" FillMode="Forward">
				<KeyFrame Cue="0%">
					<Setter Property="Foreground" Value="{StaticResource AKI_Brush_Yellow}"/>
					<Setter Property="Value" Value="0"/>
				</KeyFrame>
				<KeyFrame Cue="100%">
					<Setter Property="Foreground" Value="Red"/>
					<Setter Property="Value" Value="100"/>
				</KeyFrame>
			</Animation>
		</Style.Animations>
	</Style>

	<!-- Seperator Styles -->
	<!-- SourceRef: https://github.com/AvaloniaUI/Avalonia/blob/master/src/Avalonia.Themes.Fluent/Controls/Separator.xaml -->
	<Style Selector="Separator">
		<Setter Property="Background" Value="{StaticResource AKI_Background_Dark}"/>
	</Style>

	<!-- Button Styles -->
	<!-- SourceRef: https://github.com/AvaloniaUI/Avalonia/blob/master/src/Avalonia.Themes.Fluent/Controls/Button.xaml -->
	<Style Selector="Button">
		<Setter Property="Background" Value="{StaticResource AKI_Brush_DarkGrayBlue}"/>
		<Setter Property="Foreground" Value="{StaticResource AKI_Background_Dark}"/>
	</Style>

	<Style Selector="Button:pointerover">
		<Setter Property="FontWeight" Value="SemiBold"/>
	</Style>

	<Style Selector="Button:pointerover /template/ ContentPresenter">
		<Setter Property="Background" Value="{StaticResource AKI_Background_Light}"/>
		<Setter Property="BorderBrush" Value="{StaticResource AKI_Brush_Yellow}"/>
		<Setter Property="BorderThickness" Value="1"/>
	</Style>

	<Style Selector="Button:pressed /template/ ContentPresenter">
		<Setter Property="Background" Value="{StaticResource AKI_Brush_Yellow}"/>
	</Style>

	<Style Selector="Button:disabled /template/ ContentPresenter">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="{StaticResource AKI_Brush_DarkGrayBlue}"/>
	</Style>

	<!-- Button yellow -->
	<Style Selector="Button.yellow">
		<Setter Property="Background" Value="{StaticResource AKI_Brush_Yellow}"/>
		<Setter Property="Foreground" Value="{StaticResource AKI_Background_Dark}"/>
		<Setter Property="FontWeight" Value="SemiBold"/>
	</Style>

	<Style Selector="Button.yellow:pointerover">
		<Setter Property="FontWeight" Value="SemiBold"/>
	</Style>

	<Style Selector="Button.yellow:pointerover /template/ ContentPresenter">
		<Setter Property="Background" Value="Gold"/>
		<Setter Property="BorderBrush" Value="{StaticResource AKI_Brush_DarkGrayBlue}"/>
		<Setter Property="BorderThickness" Value="1"/>
	</Style>

	<Style Selector="Button.yellow:pressed /template/ ContentPresenter">
		<Setter Property="Background" Value="{StaticResource AKI_Brush_Lighter}"/>
	</Style>

	<Style Selector="Button.yellow:disabled /template/ ContentPresenter">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="{StaticResource AKI_Brush_DarkGrayBlue}"/>
	</Style>

	<!-- Button Link Style -->
	<Style Selector="Button.link">
		<Setter Property="Foreground" Value="{StaticResource AKI_Brush_Lighter}"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="BorderThickness" Value="0"/>
	</Style>

	<Style Selector="Button.link:pointerover /template/ ContentPresenter">
		<Setter Property="TextBlock.Foreground" Value="{StaticResource AKI_Brush_Yellow}"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="BorderThickness" Value="0"/>
	</Style>

	<Style Selector="Button.link:pressed /template/ ContentPresenter">
		<Setter Property="TextBlock.Foreground" Value="{StaticResource AKI_Brush_DarkGrayBlue}"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="BorderThickness" Value="0"/>
	</Style>

	<!-- Button Bordered Link Style -->
	<Style Selector="Button.borderedlink">
		<Setter Property="Foreground" Value="{StaticResource AKI_Brush_Lighter}"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="{StaticResource AKI_Brush_Lighter}"/>
		<Setter Property="BorderThickness" Value="1"/>
	</Style>

	<Style Selector="Button.borderedlink:pointerover /template/ ContentPresenter">
		<Setter Property="TextBlock.Foreground" Value="{StaticResource AKI_Brush_Yellow}"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="{StaticResource AKI_Brush_Yellow}"/>
	</Style>

	<Style Selector="Button.borderedlink:pressed /template/ ContentPresenter">
		<Setter Property="TextBlock.Foreground" Value="{StaticResource AKI_Brush_DarkGrayBlue}"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="{StaticResource AKI_Brush_DarkGrayBlue}"/>
		<Setter Property="BorderThickness" Value="0"/>
	</Style>

	<!-- Button Profile Info Style -->
	<Style Selector="Button.profileinfo">
		<Setter Property="Background" Value="{StaticResource AKI_Background_Dark}"/>
		<Setter Property="BorderBrush" Value="{StaticResource AKI_Background_Dark}"/>
	</Style>

	<Style Selector="Button.icon">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
	</Style>

	<Style Selector="Button.icon:pointerover">
		<Setter Property="Background" Value="{StaticResource AKI_Brush_DarkGrayBlue}"/>
	</Style>

    <!-- Checkbox styles -->
	<!-- SourceRef: https://github.com/AvaloniaUI/Avalonia/blob/master/src/Avalonia.Themes.Fluent/Controls/CheckBox.xaml -->
	<Style Selector="CheckBox">
		<Setter Property="Foreground" Value="{StaticResource AKI_Foreground_Light}"/>
	</Style>

	<Style Selector="CheckBox:pointerover /template/ ContentPresenter#ContentPresenter">
		<Setter Property="TextBlock.Foreground" Value="{StaticResource AKI_Foreground_Light}" />
	</Style>

	<Style Selector="CheckBox:checked">
		<Setter Property="FontWeight" Value="SemiBold"/>
		<Setter Property="Foreground" Value="{StaticResource AKI_Foreground_Light}"/>
	</Style>

	<Style Selector="CheckBox:checked /template/ Border#NormalRectangle">
		<Setter Property="Background" Value="{StaticResource AKI_Brush_DarkGrayBlue}"/>
		<Setter Property="BorderBrush" Value="{StaticResource AKI_Brush_Yellow}"/>
	</Style>

	<Style Selector="CheckBox:checked /template/ Path#CheckGlyph">
		<Setter Property="Fill" Value="{StaticResource AKI_Brush_Yellow}"/>
	</Style>

	<!-- ComboBox Styles -->
	<!-- Source Ref: https://github.com/AvaloniaUI/Avalonia/blob/master/src/Avalonia.Themes.Fluent/Controls/ComboBox.xaml -->
	<Style Selector="ComboBox">
		<Setter Property="Foreground" Value="{StaticResource AKI_Foreground_Light}"/>
		<Setter Property="PlaceholderForeground" Value="{StaticResource AKI_Brush_Lighter}"/>
		<Setter Property="Background" Value="{StaticResource AKI_Background_Dark}"/>
		<Setter Property="Template">
			<ControlTemplate>
				<DataValidationErrors>
					<Grid RowDefinitions="Auto, *, Auto"
						  ColumnDefinitions="*,32">
						<ContentPresenter x:Name="HeaderContentPresenter"
										  Grid.Row="0"
										  Grid.Column="0"
										  Grid.ColumnSpan="2"
										  IsVisible="False"
										  TextBlock.FontWeight="{DynamicResource ComboBoxHeaderThemeFontWeight}"
										  Margin="{DynamicResource ComboBoxTopHeaderMargin}"
										  VerticalAlignment="Top" />
						<Border x:Name="Background"
								Grid.Row="1"
								Grid.Column="0"
								Grid.ColumnSpan="2"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								CornerRadius="{TemplateBinding CornerRadius}"
								MinWidth="{DynamicResource ComboBoxThemeMinWidth}" />

						<Border x:Name="HighlightBackground"
								Grid.Row="1"
								Grid.Column="0"
								Grid.ColumnSpan="2"
								Background="{DynamicResource ComboBoxBackgroundUnfocused}"
								BorderBrush="{DynamicResource ComboBoxBackgroundBorderBrushUnfocused}"
								BorderThickness="{TemplateBinding BorderThickness}"
								CornerRadius="{TemplateBinding CornerRadius}" />
						<TextBlock x:Name="PlaceholderTextBlock"
								   Grid.Row="1"
								   Grid.Column="0"
								   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								   Margin="{TemplateBinding Padding}"
								   Text="{TemplateBinding PlaceholderText}"
								   Foreground="{TemplateBinding PlaceholderForeground}"
								   IsVisible="{TemplateBinding SelectionBoxItem, Converter={x:Static ObjectConverters.IsNull}}" />
						<ContentControl x:Name="ContentPresenter"
										Content="{TemplateBinding SelectionBoxItem}"
										ContentTemplate="{TemplateBinding ItemTemplate}"
										Grid.Row="1"
										Grid.Column="0"
										Margin="{TemplateBinding Padding}"
										HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
										VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />

						<Border x:Name="DropDownOverlay"
								Grid.Row="1"
								Grid.Column="1"
								Background="Transparent"
								Margin="0,1,1,1"
								Width="30"
								IsVisible="False"
								HorizontalAlignment="Right" />

						<Viewbox UseLayoutRounding="False"
								 MinHeight="{DynamicResource ComboBoxMinHeight}"
								 Grid.Row="1"
								 Grid.Column="1"
								 IsHitTestVisible="False"
								 Margin="0,0,10,0"
								 Height="12"
								 Width="12"
								 HorizontalAlignment="Right"
								 VerticalAlignment="Center">
							<Panel>
								<Panel Height="12"
									   Width="12" />
								<Path x:Name="DropDownGlyph"
									  VerticalAlignment="Center" />
							</Panel>
						</Viewbox>
						<Popup Name="PART_Popup"
							   WindowManagerAddShadowHint="False"
							   IsOpen="{TemplateBinding IsDropDownOpen, Mode=TwoWay}"
							   MinWidth="{Binding Bounds.Width, RelativeSource={RelativeSource TemplatedParent}}"
							   MaxHeight="{TemplateBinding MaxDropDownHeight}"
							   PlacementTarget="Background"
							   IsLightDismissEnabled="True">
							<Border x:Name="PopupBorder"
									Background="{StaticResource AKI_Background_Dark}"
									BorderBrush="{StaticResource AKI_Background_Dark}"
									BorderThickness="{DynamicResource ComboBoxDropdownBorderThickness}"
									Margin="0,-1,0,-1"
									Padding="{DynamicResource ComboBoxDropdownBorderPadding}"
									HorizontalAlignment="Stretch"
									CornerRadius="{DynamicResource OverlayCornerRadius}">
								<ScrollViewer HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
											  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
									<ItemsPresenter Name="PART_ItemsPresenter"
													Items="{TemplateBinding Items}"
													Margin="{DynamicResource ComboBoxDropdownContentMargin}"
													ItemsPanel="{TemplateBinding ItemsPanel}"
													ItemTemplate="{TemplateBinding ItemTemplate}"
													VirtualizationMode="{TemplateBinding VirtualizationMode}" />
								</ScrollViewer>
							</Border>
						</Popup>
					</Grid>
				</DataValidationErrors>
			</ControlTemplate>
		</Setter>
	</Style>

	<Style Selector="ComboBox /template/ Path#DropDownGlyph">
		<Setter Property="Fill" Value="{StaticResource AKI_Foreground_Light}" />
	</Style>

	<Style Selector="ComboBox:pointerover /template/ Path#DropDownGlyph">
		<Setter Property="Fill" Value="{StaticResource AKI_Brush_Yellow}" />
	</Style>

	<Style Selector="ComboBox:pointerover">
		<Setter Property="Foreground" Value="{StaticResource AKI_Brush_Yellow}"/>
	</Style>

	<Style Selector="ComboBox:pointerover /template/ Border#Background">
		<Setter Property="Background" Value="Black"/>
		<Setter Property="BorderBrush" Value="Black" />
	</Style>

	<Style Selector="ComboBox /template/ Border#PopupBorder">
		<Setter Property="Background" Value="Black"/>
		<Setter Property="BorderBrush" Value="Black"/>
	</Style>

	<!-- ComboBoxItem Styles -->
	<!-- Source Ref: https://github.com/AvaloniaUI/Avalonia/blob/master/src/Avalonia.Themes.Fluent/Controls/ComboBoxItem.xaml-->
	<Style Selector="ComboBoxItem /template/ ContentPresenter">
		<Setter Property="Background" Value="Black"/>
	</Style>

	<Style Selector="ComboBoxItem">
		<Setter Property="Foreground" Value="{StaticResource AKI_Foreground_Light}"/>
		<Setter Property="Background" Value="{StaticResource AKI_Background_Dark}"/>
	</Style>

	<Style Selector="ComboBoxItem:pointerover /template/ ContentPresenter">
		<Setter Property="Background" Value="{StaticResource AKI_Background_Light}" />
		<Setter Property="BorderBrush" Value="{StaticResource AKI_Background_Light}" />
		<Setter Property="TextBlock.Foreground" Value="{StaticResource AKI_Foreground_Light}" />
	</Style>

	<Style Selector="ComboBoxItem:selected /template/ ContentPresenter">
		<Setter Property="Background" Value="{StaticResource AKI_Brush_Yellow}" />
		<Setter Property="BorderBrush" Value="{StaticResource AKI_Brush_Yellow}" />
		<Setter Property="TextBlock.Foreground" Value="{StaticResource AKI_Background_Dark}" />
	</Style>

</Styles>